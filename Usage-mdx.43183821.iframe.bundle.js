/*! For license information please see Usage-mdx.43183821.iframe.bundle.js.LICENSE.txt */
"use strict";(self.webpackChunk_zhuzy_react_shared=self.webpackChunk_zhuzy_react_shared||[]).push([[3947],{"./node_modules/.pnpm/@mdx-js+react@2.3.0_react@18.2.0/node_modules/@mdx-js/react/lib/index.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{NF:()=>withMDXComponents,Zo:()=>MDXProvider,ah:()=>useMDXComponents,pC:()=>MDXContext});var react__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js");const MDXContext=react__WEBPACK_IMPORTED_MODULE_0__.createContext({});function withMDXComponents(Component){return function boundMDXComponent(props){const allComponents=useMDXComponents(props.components);return react__WEBPACK_IMPORTED_MODULE_0__.createElement(Component,{...props,allComponents})}}function useMDXComponents(components){const contextComponents=react__WEBPACK_IMPORTED_MODULE_0__.useContext(MDXContext);return react__WEBPACK_IMPORTED_MODULE_0__.useMemo((()=>"function"==typeof components?components(contextComponents):{...contextComponents,...components}),[contextComponents,components])}const emptyObject={};function MDXProvider({components,children,disableParentContext}){let allComponents;return allComponents=disableParentContext?"function"==typeof components?components({}):components||emptyObject:useMDXComponents(components),react__WEBPACK_IMPORTED_MODULE_0__.createElement(MDXContext.Provider,{value:allComponents},children)}},"./stories/Usage.mdx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{default:()=>__WEBPACK_DEFAULT_EXPORT__});__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js");var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js"),_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__=__webpack_require__("./node_modules/.pnpm/@mdx-js+react@2.3.0_react@18.2.0/node_modules/@mdx-js/react/lib/index.js"),_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__=__webpack_require__("./node_modules/.pnpm/@storybook+blocks@7.0.12_react-dom@18.2.0_react@18.2.0/node_modules/@storybook/blocks/dist/index.mjs");function _createMdxContent(props){const _components=Object.assign({h1:"h1",h2:"h2",pre:"pre",code:"code",p:"p",br:"br"},(0,_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment,{children:[(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_3__.h_,{title:"Guide/Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1,{id:"usage",children:"Usage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"createbreakpoint",children:"createBreakpoint"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { createBreakpoint } from '@zhuzy/react-shared'\n\nconst useBreakpoint = createBreakpoint({ XL: 1280, L: 768, S: 350 })\n\nconst Demo = () => {\n  const breakpoint = useBreakpoint()\n\n  if (breakpoint === 'XL') return <div> XL </div>\n  else if (breakpoint == 'L') return <div> LoL</div>\n  else if (breakpoint == 'S') return <div> Sexyy</div>\n  else return <div> Wth</div>\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useglobalstate",children:"useGlobalState"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"A React hook that creates a globally shared state."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"const useGlobalValue = createGlobalState(0)\n\nconst CompA: FC = () => {\n  const [value, setValue] = useGlobalValue()\n\n  return <button onClick={() => setValue(value + 1)}>+</button>\n}\n\nconst CompB: FC = () => {\n  const [value, setValue] = useGlobalValue()\n\n  return <button onClick={() => setValue(value - 1)}>-</button>\n}\n\nconst Demo: FC = () => {\n  const [value] = useGlobalValue()\n  return (\n    <div>\n      <p>{value}</p>\n      <CompA />\n      <CompB />\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"createstatecontext",children:"createStateContext"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Factory for react context hooks that will behave just like React's useState except the state will be shared among all components in the provider."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { createStateContext } from '@zhuzy/react-shared'\n\nconst [useSharedText, SharedTextProvider] = createStateContext('')\n\nconst ComponentA = () => {\n  const [text, setText] = useSharedText()\n  return (\n    <p>\n      Component A:\n      <br />\n      <input\n        type=\"text\"\n        value={text}\n        onInput={(ev) => setText(ev.target.value)}\n      />\n    </p>\n  )\n}\n\nconst ComponentB = () => {\n  const [text, setText] = useSharedText()\n  return (\n    <p>\n      Component B:\n      <br />\n      <input\n        type=\"text\"\n        value={text}\n        onInput={(ev) => setText(ev.target.value)}\n      />\n    </p>\n  )\n}\n\nconst Demo = () => {\n  return (\n    <SharedTextProvider>\n      <p>Those two fields share the same value.</p>\n      <ComponentA />\n      <ComponentB />\n    </SharedTextProvider>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useaudio",children:"useAudio"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Creates ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<audio>"})," element, tracks its state and exposes playback controls."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useAudio } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [audio, state, controls, ref] = useAudio({\n    src: 'https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3',\n    autoPlay: true,\n  })\n\n  return (\n    <div>\n      {audio}\n      <pre>{JSON.stringify(state, null, 2)}</pre>\n      <button onClick={controls.pause}>Pause</button>\n      <button onClick={controls.play}>Play</button>\n      <br />\n      <button onClick={controls.mute}>Mute</button>\n      <button onClick={controls.unmute}>Un-mute</button>\n      <br />\n      <button onClick={() => controls.volume(0.1)}>Volume: 10%</button>\n      <button onClick={() => controls.volume(0.5)}>Volume: 50%</button>\n      <button onClick={() => controls.volume(1)}>Volume: 100%</button>\n      <br />\n      <button onClick={() => controls.seek(state.time - 5)}>-5 sec</button>\n      <button onClick={() => controls.seek(state.time + 5)}>+5 sec</button>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usecookie",children:"useCookie"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React hook that returns the current value of a cookie, a callback to update the cookie and a callback to delete the cookie."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useCookie } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [value, updateCookie, deleteCookie] = useCookie('my-cookie')\n  const [counter, setCounter] = useState(1)\n\n  useEffect(() => {\n    deleteCookie()\n  }, [])\n\n  const updateCookieHandler = () => {\n    updateCookie(`my-awesome-cookie-${counter}`)\n    setCounter((c) => c + 1)\n  }\n\n  return (\n    <div>\n      <p>Value: {value}</p>\n      <button onClick={updateCookieHandler}>Update Cookie</button>\n      <br />\n      <button onClick={deleteCookie}>Delete Cookie</button>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usecopytoclipboard",children:"useCopyToClipboard"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Copy text to a user's clipboard."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"const Demo = () => {\n  const [text, setText] = React.useState('')\n  const [state, copyToClipboard] = useCopyToClipboard()\n\n  return (\n    <div>\n      <input value={text} onChange={(e) => setText(e.target.value)} />\n      <button type=\"button\" onClick={() => copyToClipboard(text)}>\n        copy text\n      </button>\n      {state.error ? (\n        <p>Unable to copy value: {state.error.message}</p>\n      ) : (\n        state.value && <p>Copied {state.value}</p>\n      )}\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useeffectonce",children:"useEffectOnce"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React lifecycle hook that runs an effect only once."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useEffectOnce } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  useEffectOnce(() => {\n    console.log('Running effect once on mount')\n\n    return () => {\n      console.log('Running clean-up of effect on unmount')\n    }\n  })\n\n  return null\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useerror",children:"useError"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React side-effect hook that returns an error dispatcher."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useError } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const dispatchError = useError()\n\n  const clickHandler = () => {\n    dispatchError(new Error('Some error!'))\n  }\n\n  return <button onClick={clickHandler}>Click me to throw</button>\n}\n\n// In parent app\nconst App = () => (\n  <ErrorBoundary>\n    <Demo />\n  </ErrorBoundary>\n)\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useevent",children:"useEvent"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React sensor hook that subscribes a handler to events."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useEvent, useList } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [list, { push, clear }] = useList()\n\n  const onKeyDown = useCallback(({ key }) => {\n    if (key === 'r') clear()\n    push(key)\n  }, [])\n\n  useEvent('keydown', onKeyDown)\n\n  return (\n    <div>\n      <p>\n        Press some keys on your keyboard,{' '}\n        <code style={{ color: 'tomato' }}>r</code> key resets the list\n      </p>\n      <pre>{JSON.stringify(list, null, 4)}</pre>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usefirstmountstate",children:"useFirstMountState"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Returns ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"true"})," if component is just mounted (on first render) and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"false"})," otherwise."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useFirstMountState } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const isFirstMount = useFirstMountState()\n  const update = useUpdate()\n\n  return (\n    <div>\n      <span>This component is just mounted: {isFirstMount ? 'YES' : 'NO'}</span>\n      <br />\n      <button onClick={update}>re-render</button>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usefullscreen",children:"useFullscreen"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Display an element full-screen, optional fallback for fullscreen video on iOS."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useFullscreen, useToggle } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const ref = useRef(null)\n  const [show, toggle] = useToggle(false)\n  const isFullscreen = useFullscreen(ref, show, {\n    onClose: () => toggle(false),\n  })\n\n  return (\n    <div ref={ref} style={{ backgroundColor: 'white' }}>\n      <div>{isFullscreen ? 'Fullscreen' : 'Not fullscreen'}</div>\n      <button onClick={() => toggle()}>Toggle</button>\n      <video src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\" autoPlay />\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usegeolocation",children:"useGeolocation"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React sensor hook that tracks user's geographic location. This hook accepts position options."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useGeolocation } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const state = useGeolocation()\n\n  return <pre>{JSON.stringify(state, null, 2)}</pre>\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useidle",children:"useIdle"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React sensor hook that tracks if user on the page is idle."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useIdle } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const isIdle = useIdle(3e3)\n\n  return (\n    <div>\n      <div>User is idle: {isIdle ? 'Yes 😴' : 'Nope'}</div>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useintersection",children:"useIntersection"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React sensor hook that tracks the changes in the intersection of a target element with an ancestor element or with a top-level document's viewport. Uses the Intersection Observer API and returns a IntersectionObserverEntry."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import * as React from 'react'\nimport { useIntersection } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const intersectionRef = React.useRef(null)\n  const intersection = useIntersection(intersectionRef, {\n    root: null,\n    rootMargin: '0px',\n    threshold: 1,\n  })\n\n  return (\n    <div ref={intersectionRef}>\n      {intersection && intersection.intersectionRatio < 1\n        ? 'Obscured'\n        : 'Fully in view'}\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useinterval",children:"useInterval"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"A declarative interval hook based on Dan Abramov's article on overreacted.io. The interval can be paused by setting the delay to null."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import * as React from 'react'\nimport { useInterval } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [count, setCount] = React.useState(0)\n  const [delay, setDelay] = React.useState(1000)\n  const [isRunning, toggleIsRunning] = useBoolean(true)\n\n  useInterval(\n    () => {\n      setCount(count + 1)\n    },\n    isRunning ? delay : null,\n  )\n\n  return (\n    <div>\n      <div>\n        delay:{' '}\n        <input\n          value={delay}\n          onChange={(event) => setDelay(Number(event.target.value))}\n        />\n      </div>\n      <h1>count: {count}</h1>\n      <div>\n        <button onClick={toggleIsRunning}>\n          {isRunning ? 'stop' : 'start'}\n        </button>\n      </div>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useisomorphiclayouteffect",children:"useIsomorphicLayoutEffect"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"useLayoutEffect that does not show warning when server-side rendering."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useIsomorphicLayoutEffect } from '@zhuzy/react-shared'\n\nconst Demo = ({ value }) => {\n  useIsomorphicLayoutEffect(() => {\n    window.console.log(value)\n  }, [value])\n\n  return null\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usekey",children:"useKey"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React UI sensor hook that executes a handler when a keyboard key is used."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useKey } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [count, set] = useState(0)\n  const increment = () => set((count) => ++count)\n  useKey('ArrowUp', increment)\n\n  return <div>Press arrow up: {count}</div>\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usekeypress",children:"useKeyPress"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React UI sensor hook that detects when the user is pressing a specific key on their keyboard."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useKeyPress } from '@zhuzy/react-shared'\n\nconst keys = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0']\n\nconst Demo = () => {\n  const states = []\n  for (const key of keys) states.push(useKeyPress(key)[0])\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      Try pressing numbers\n      <br />\n      {states.reduce((s, pressed, index) => {\n        return s + (pressed ? (s ? ' + ' : '') + keys[index] : '')\n      }, '')}\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usekeypressevent",children:"useKeyPressEvent"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"This hook fires keydown and keyup callbacks, similar to how useKey hook does, but it only triggers each callback once per press cycle. For example, if you press and hold a key, it will fire keydown callback only once."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import React, { useState } from React;\nimport {useKeyPressEvent} from '@zhuzy/react-shared';\n\nconst Demo = () => {\n  const [count, setCount] = useState(0);\n\n  const increment = () => setCount(count => ++count);\n  const decrement = () => setCount(count => --count);\n  const reset = () => setCount(count => 0);\n\n  useKeyPressEvent(']', increment, increment);\n  useKeyPressEvent('[', decrement, decrement);\n  useKeyPressEvent('r', reset);\n\n  return (\n    <div>\n      <p>\n        Try pressing <code>[</code>, <code>]</code>, and <code>r</code> to\n        see the count incremented and decremented.</p>\n      <p>Count: {count}</p>\n    </div>\n  );\n};\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"uselist",children:"useList"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"Tracks an array and provides methods to modify it."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useList } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [\n    list,\n    {\n      set,\n      push,\n      updateAt,\n      insertAt,\n      update,\n      updateFirst,\n      upsert,\n      sort,\n      filter,\n      removeAt,\n      clear,\n      reset,\n    },\n  ] = useList([1, 2, 3, 4, 5])\n\n  return (\n    <div>\n      <button onClick={() => set([1, 2, 3])}>Set to [1, 2, 3]</button>\n      <button onClick={() => push(Date.now())}>Push timestamp</button>\n      <button onClick={() => updateAt(1, Date.now())}>\n        Update value at index 1\n      </button>\n      <button onClick={() => remove(1)}>Remove element at index 1</button>\n      <button onClick={() => filter((item) => item % 2 === 0)}>\n        Filter even values\n      </button>\n      <button onClick={() => sort((a, b) => a - b)}>Sort ascending</button>\n      <button onClick={() => sort((a, b) => b - a)}>Sort descending</button>\n      <button onClick={clear}>Clear</button>\n      <button onClick={reset}>Reset</button>\n      <pre>{JSON.stringify(list, null, 2)}</pre>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"uselocalstorage",children:"useLocalStorage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React side-effect hook that manages a single localStorage key."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useLocalStorage } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [value, setValue, remove] = useLocalStorage('my-key', 'foo')\n\n  return (\n    <div>\n      <div>Value: {value}</div>\n      <button onClick={() => setValue('bar')}>bar</button>\n      <button onClick={() => setValue('baz')}>baz</button>\n      <button onClick={() => remove()}>Remove</button>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"uselongpress",children:"useLongPress"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React sensor hook that fires a callback after long pressing."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useLongPress } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const onLongPress = () => {\n    console.log('calls callback after long pressing 300ms')\n  }\n\n  const defaultOptions = {\n    isPreventDefault: true,\n    delay: 300,\n  }\n  const longPressEvent = useLongPress(onLongPress, defaultOptions)\n\n  return <button {...longPressEvent}>useLongPress</button>\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usemap",children:"useMap"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React state hook that tracks a value of an object."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useMap } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [map, { set, setAll, remove, reset }] = useMap({\n    hello: 'there',\n  })\n\n  return (\n    <div>\n      <button onClick={() => set(String(Date.now()), new Date().toJSON())}>\n        Add\n      </button>\n      <button onClick={() => reset()}>Reset</button>\n      <button onClick={() => setAll({ hello: 'new', data: 'data' })}>\n        Set new data\n      </button>\n      <button onClick={() => remove('hello')} disabled={!map.hello}>\n        Remove 'hello'\n      </button>\n      <pre>{JSON.stringify(map, null, 2)}</pre>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usemountedstate",children:"useMountedState"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Lifecycle hook providing ability to check component's mount state.",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.br,{}),"\n","Returns a function that will return ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"true"})," if component mounted and ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"false"})," otherwise."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useMountedState } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const isMounted = useMountedState()\n\n  React.useEffect(() => {\n    setTimeout(() => {\n      if (isMounted()) {\n        // ...\n      } else {\n        // ...\n      }\n    }, 1000)\n  })\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usemouse",children:"useMouse"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React sensor hooks that re-render on mouse position changes."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useMouse } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const ref = React.useRef(null)\n  const { docX, docY, posX, posY, elX, elY, elW, elH } = useMouse(ref)\n\n  return (\n    <div ref={ref}>\n      <div>\n        Mouse position in document - x:{docX} y:{docY}\n      </div>\n      <div>\n        Mouse position in element - x:{elX} y:{elY}\n      </div>\n      <div>\n        Element position- x:{posX} y:{posY}\n      </div>\n      <div>\n        Element dimensions - {elW}x{elH}\n      </div>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usequeue",children:"useQueue"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React state hook implements simple FIFO queue."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useQueue } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const { add, remove, first, last, size } = useQueue()\n\n  return (\n    <div>\n      <ul>\n        <li>first: {first}</li>\n        <li>last: {last}</li>\n        <li>size: {size}</li>\n      </ul>\n      <button onClick={() => add((last || 0) + 1)}>Add</button>\n      <button onClick={() => remove()}>Remove</button>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"userafstate",children:"useRafState"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React state hook that only updates state in the callback of requestAnimationFrame."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useRafState, useMount } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [state, setState] = useRafState({\n    width: 0,\n    height: 0,\n  })\n\n  useMount(() => {\n    const onResize = () => {\n      setState({\n        width: window.clientWidth,\n        height: window.height,\n      })\n    }\n\n    window.addEventListener('resize', onResize)\n\n    return () => {\n      window.removeEventListener('resize', onResize)\n    }\n  })\n\n  return <pre>{JSON.stringify(state, null, 2)}</pre>\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usesearchparam",children:"useSearchParam"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React sensor hook that tracks browser's location search param."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useSearchParam } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const edit = useSearchParam('edit')\n\n  return (\n    <div>\n      <div>edit: {edit || '🤷‍♂️'}</div>\n      <div>\n        <button\n          onClick={() =>\n            history.pushState({}, '', location.pathname + '?edit=123')\n          }\n        >\n          Edit post 123 (?edit=123)\n        </button>\n      </div>\n      <div>\n        <button\n          onClick={() =>\n            history.pushState({}, '', location.pathname + '?edit=999')\n          }\n        >\n          Edit post 999 (?edit=999)\n        </button>\n      </div>\n      <div>\n        <button onClick={() => history.pushState({}, '', location.pathname)}>\n          Close modal\n        </button>\n      </div>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usesessionstorage",children:"useSessionStorage"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React side-effect hook that manages a single sessionStorage key."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useSessionStorage } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [value, setValue] = useSessionStorage('my-key', 'foo')\n\n  return (\n    <div>\n      <div>Value: {value}</div>\n      <button onClick={() => setValue('bar')}>bar</button>\n      <button onClick={() => setValue('baz')}>baz</button>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usesetstate",children:"useSetState"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React state hook that creates setState method which works similar to how this.setState works in class components—it merges object changes into current state."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useSetState } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [state, setState] = useSetState({})\n\n  return (\n    <div>\n      <pre>{JSON.stringify(state, null, 2)}</pre>\n      <button onClick={() => setState({ hello: 'world' })}>hello</button>\n      <button onClick={() => setState({ foo: 'bar' })}>foo</button>\n      <button\n        onClick={() => {\n          setState((prevState) => ({\n            count: (prevState.count || 0) + 1,\n          }))\n        }}\n      >\n        count\n      </button>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usetoggle",children:"useToggle"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React state hook that tracks value of a boolean."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useToggle } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [on, toggle] = useToggle(true)\n\n  return (\n    <div>\n      <div>{on ? 'ON' : 'OFF'}</div>\n      <button onClick={toggle}>Toggle</button>\n      <button onClick={() => toggle(true)}>set ON</button>\n      <button onClick={() => toggle(false)}>set OFF</button>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useunmount",children:"useUnmount"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["React lifecycle hook that calls a function when the component will unmount. Use ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"useLifecycles"})," if you need both a mount and unmount function."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useUnmount } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  useUnmount(() => alert('UNMOUNTED'))\n  return null\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useupdate",children:"useUpdate"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React utility hook that returns a function that forces component\nto re-render when called."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useUpdate } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const update = useUpdate()\n  return (\n    <>\n      <div>Time: {Date.now()}</div>\n      <button onClick={update}>Update</button>\n    </>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"useupdateeffect",children:"useUpdateEffect"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React effect hook that ignores the first invocation (e.g. on mount). The signature is exactly the same as the useEffect hook."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useUpdateEffect } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [count, setCount] = React.useState(0)\n\n  React.useEffect(() => {\n    const interval = setInterval(() => {\n      setCount((count) => count + 1)\n    }, 1000)\n\n    return () => {\n      clearInterval(interval)\n    }\n  }, [])\n\n  useUpdateEffect(() => {\n    console.log('count', count) // will only show 1 and beyond\n\n    return () => {\n      // *OPTIONAL*\n      // do something on unmount\n    }\n  }) // you can include deps array if necessary\n\n  return <div>Count: {count}</div>\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usevideo",children:"useVideo"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p,{children:["Creates ",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{children:"<video>"})," element, tracks its state and exposes playback controls."]}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useVideo } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [video, state, controls, ref] = useVideo(\n    <video src=\"http://clips.vorwaerts-gmbh.de/big_buck_bunny.mp4\" autoPlay />,\n  )\n\n  return (\n    <div>\n      {video}\n      <pre>{JSON.stringify(state, null, 2)}</pre>\n      <button onClick={controls.pause}>Pause</button>\n      <button onClick={controls.play}>Play</button>\n      <br />\n      <button onClick={controls.mute}>Mute</button>\n      <button onClick={controls.unmute}>Un-mute</button>\n      <br />\n      <button onClick={() => controls.volume(0.1)}>Volume: 10%</button>\n      <button onClick={() => controls.volume(0.5)}>Volume: 50%</button>\n      <button onClick={() => controls.volume(1)}>Volume: 100%</button>\n      <br />\n      <button onClick={() => controls.seek(state.time - 5)}>-5 sec</button>\n      <button onClick={() => controls.seek(state.time + 5)}>+5 sec</button>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usewindowsize",children:"useWindowSize"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React sensor hook that tracks dimensions of the browser window."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useWindowSize } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const { width, height } = useWindowSize()\n\n  return (\n    <div>\n      <div>width: {width}</div>\n      <div>height: {height}</div>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usepinchzoom",children:"usePinchZoom"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React sensor hook that tracks the changes in pointer touch events and detects value of pinch difference and tell if user is zooming in or out."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { usePinchZoom } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const [scale, setState] = useState(1)\n  const scaleRef = useRef()\n  const { zoomingState, pinchState } = usePinchZoom(scaleRef)\n\n  useEffect(() => {\n    if (zoomingState === 'ZOOM_IN') {\n      // perform zoom in scaling\n      setState(scale + 0.1)\n    } else if (zoomingState === 'ZOOM_OUT') {\n      // perform zoom out in scaling\n      setState(scale - 0.1)\n    }\n  }, [zoomingState])\n\n  return (\n    <div ref={scaleRef}>\n      <img\n        src=\"https://www.olympus-imaging.co.in/content/000107506.jpg\"\n        style={{\n          zoom: scale,\n        }}\n      />\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usescroll",children:"useScroll"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React sensor hook that re-renders when the scroll position in a DOM element changes."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useScroll } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const scrollRef = React.useRef(null)\n  const { x, y } = useScroll(scrollRef)\n\n  return (\n    <div ref={scrollRef}>\n      <div>x: {x}</div>\n      <div>y: {y}</div>\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"usescrolling",children:"useScrolling"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p,{children:"React sensor hook that keeps track of whether the user is scrolling or not."}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useScrolling } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const scrollRef = React.useRef(null)\n  const scrolling = useScrolling(scrollRef)\n\n  return (\n    <div ref={scrollRef}>\n      {<div>{scrolling ? 'Scrolling' : 'Not scrolling'}</div>}\n    </div>\n  )\n}\n"})}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h2,{id:"faf",children:"faf"}),"\n",(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.pre,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code,{className:"language-jsx",children:"import { useScrolling } from '@zhuzy/react-shared'\n\nconst Demo = () => {\n  const sbw = useScrollbarWidth()\n\n  return (\n    <div>\n      {sbw === undefined\n        ? `DOM is not ready yet, SBW detection delayed`\n        : `Browser's scrollbar width is ${sbw}px`}\n    </div>\n  )\n}\n"})})]})}const __WEBPACK_DEFAULT_EXPORT__=function MDXContent(props={}){const{wrapper:MDXLayout}=Object.assign({},(0,_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_2__.ah)(),props.components);return MDXLayout?(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout,Object.assign({},props,{children:(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent,props)})):_createMdxContent(props)}},"./node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react-jsx-runtime.production.min.js":(__unused_webpack_module,exports,__webpack_require__)=>{var f=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/index.js"),k=Symbol.for("react.element"),l=Symbol.for("react.fragment"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};function q(c,a,g){var b,d={},e=null,h=null;for(b in void 0!==g&&(e=""+g),void 0!==a.key&&(e=""+a.key),void 0!==a.ref&&(h=a.ref),a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l,exports.jsx=q,exports.jsxs=q},"./node_modules/.pnpm/react@18.2.0/node_modules/react/jsx-runtime.js":(module,__unused_webpack_exports,__webpack_require__)=>{module.exports=__webpack_require__("./node_modules/.pnpm/react@18.2.0/node_modules/react/cjs/react-jsx-runtime.production.min.js")}}]);